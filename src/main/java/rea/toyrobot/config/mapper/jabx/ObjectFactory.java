//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.08 at 11:32:10 AM AEST 
//


package rea.toyrobot.config.mapper.jabx;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the rea.toyrobot.config.mapper.jabx package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: rea.toyrobot.config.mapper.jabx
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ToyRobot }
     * 
     */
    public ToyRobot createToyRobot() {
        return new ToyRobot();
    }

    /**
     * Create an instance of {@link ToyRobot.ReaRobotClients }
     * 
     */
    public ToyRobot.ReaRobotClients createToyRobotReaRobotClients() {
        return new ToyRobot.ReaRobotClients();
    }

    /**
     * Create an instance of {@link ToyRobot.ReaWorldInitiator }
     * 
     */
    public ToyRobot.ReaWorldInitiator createToyRobotReaWorldInitiator() {
        return new ToyRobot.ReaWorldInitiator();
    }

    /**
     * Create an instance of {@link ToyRobot.ReaLocalInitiator }
     * 
     */
    public ToyRobot.ReaLocalInitiator createToyRobotReaLocalInitiator() {
        return new ToyRobot.ReaLocalInitiator();
    }

    /**
     * Create an instance of {@link ToyRobot.ReaGlobalInitiator }
     * 
     */
    public ToyRobot.ReaGlobalInitiator createToyRobotReaGlobalInitiator() {
        return new ToyRobot.ReaGlobalInitiator();
    }

    /**
     * Create an instance of {@link ToyRobot.World }
     * 
     */
    public ToyRobot.World createToyRobotWorld() {
        return new ToyRobot.World();
    }

    /**
     * Create an instance of {@link ToyRobot.CompassFactory }
     * 
     */
    public ToyRobot.CompassFactory createToyRobotCompassFactory() {
        return new ToyRobot.CompassFactory();
    }

    /**
     * Create an instance of {@link ToyRobot.ReaPerspectiveFactory }
     * 
     */
    public ToyRobot.ReaPerspectiveFactory createToyRobotReaPerspectiveFactory() {
        return new ToyRobot.ReaPerspectiveFactory();
    }

    /**
     * Create an instance of {@link ToyRobot.ReaPhysicalObjectFactory }
     * 
     */
    public ToyRobot.ReaPhysicalObjectFactory createToyRobotReaPhysicalObjectFactory() {
        return new ToyRobot.ReaPhysicalObjectFactory();
    }

    /**
     * Create an instance of {@link ToyRobot.ReaRobotClients.Client }
     * 
     */
    public ToyRobot.ReaRobotClients.Client createToyRobotReaRobotClientsClient() {
        return new ToyRobot.ReaRobotClients.Client();
    }

    /**
     * Create an instance of {@link ToyRobot.ReaWorldInitiator.Action }
     * 
     */
    public ToyRobot.ReaWorldInitiator.Action createToyRobotReaWorldInitiatorAction() {
        return new ToyRobot.ReaWorldInitiator.Action();
    }

    /**
     * Create an instance of {@link ToyRobot.ReaLocalInitiator.Action }
     * 
     */
    public ToyRobot.ReaLocalInitiator.Action createToyRobotReaLocalInitiatorAction() {
        return new ToyRobot.ReaLocalInitiator.Action();
    }

    /**
     * Create an instance of {@link ToyRobot.ReaGlobalInitiator.Action }
     * 
     */
    public ToyRobot.ReaGlobalInitiator.Action createToyRobotReaGlobalInitiatorAction() {
        return new ToyRobot.ReaGlobalInitiator.Action();
    }

}
